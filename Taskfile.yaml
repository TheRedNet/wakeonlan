version: "3"

vars:
  GO: go

#output: #'prefixed'
#  group: {begin: '::group::{{.TASK}}', end: '::endgroup::'}



tasks:
  default: task -l
  

  run-server: 
    desc: Run the Server
    cmds:
      - task: build_generic
        vars:
          GOOS: '{{OS}}'
          GOARCH: '{{ARCH}}'
      - ./bin/wakeonlan_{{OS}}_{{ARCH}}{{exeExt}}
    deps:
      - task: build-deps


  build:
    desc: Build for current OS or specifie os with "task build OS=your_os ARCH=your_arch"
    cmds:
      - task: build_generic
        vars:
          GOOS: '{{OS}}'
          GOARCH: '{{ARCH}}'
    deps:
      - task: build-deps      

  list-dists:
    desc: List all supported OS/ARCH combinations
    cmds:
      - go tool dist list

  build-all:
    desc: build for all major OS/ARCH combinations
    cmds:
      - task: build-deps
      - task: build-all-concurrent
        parallel: true
      


  # Build binaries concurrently

  build-all-concurrent:
    desc: build for all major OS/ARCH combinations
    deps:
      - task: build_generic
        vars:
          GOOS: 'windows'
          GOARCH: 'amd64'
      - task: build_generic
        vars:
          GOOS: 'linux'
          GOARCH: 'amd64' 
      - task: build_generic
        vars:
          GOOS: 'linux'
          GOARCH: '386'    
      - task: build_generic
        vars:
          GOOS: 'linux'
          GOARCH: 'arm64'
      - task: build_generic
        vars:
          GOOS: 'linux'
          GOARCH: 'arm'

  build-deps:
    desc: prepare the build environment
    deps:
      - embedFS

          


  build_generic: 
    internal: true
    label: 'build_{{.GOOS}}_{{.GOARCH}}'
    run: when_changed
    env:
      GOOS: '{{.GOOS}}'
      GOARCH: '{{.GOARCH}}'
    generates:
      - ./bin/wakeonlan_{{.GOOS}}_{{.GOARCH}}{{if eq .GOOS "windows"}}.exe{{end}}
    sources:
      - main.go
      - pkg/*/*.go
      - embedFS/*
    cmds:
      - go build -o bin/wakeonlan_{{.GOOS}}_{{.GOARCH}}{{if eq .GOOS "windows"}}.exe{{end}} cmd/server/main.go
      - echo "Build for {{.GOOS}}/{{.GOARCH}} done"
    preconditions:
      - test -n '{{.GOOS}}'
      - test -n '{{.GOARCH}}'
      - test -f go.sum
      - test -d embedFS

  

  go-setup: #go.sum embedfs/
    sources:
      - go.mod
    generates:
      - go.sum
    cmds:
      - mkdir embedFS
      - go mod tidy
      - go mod download
      - go mod verify
      - go get github.com/UnnoTed/fileb0x

  embedFS: 
    deps:
      - go-setup
    sources:
      - views/*
      - assets/*
    generates:
      - embedFS/*
    cmds:
      - go generate



  run-client:
    desc: Run the Client
    cmds:
      - go run cmd/client/main.go
  
